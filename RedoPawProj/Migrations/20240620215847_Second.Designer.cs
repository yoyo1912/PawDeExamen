// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedoPawProj.Data;

#nullable disable

namespace RedoPawProj.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240620215847_Second")]
    partial class Second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RedoPawProj.Models.CompanieModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataInfiintarii")
                        .HasColumnType("datetime2");

                    b.Property<int>("DomeniuActivitateId")
                        .HasColumnType("int");

                    b.Property<string>("NumarTelefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DomeniuActivitateId");

                    b.ToTable("Companii");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresa = "123 Main St",
                            DataInfiintarii = new DateTime(2024, 6, 21, 0, 58, 47, 309, DateTimeKind.Local).AddTicks(9410),
                            DomeniuActivitateId = 1,
                            NumarTelefon = "123456789",
                            Nume = "Company A"
                        },
                        new
                        {
                            Id = 2,
                            Adresa = "456 Side St",
                            DataInfiintarii = new DateTime(2024, 6, 21, 0, 58, 47, 309, DateTimeKind.Local).AddTicks(9449),
                            DomeniuActivitateId = 2,
                            NumarTelefon = "987654321",
                            Nume = "Company B"
                        });
                });

            modelBuilder.Entity("RedoPawProj.Models.DomeniuActivitateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DomeniiActivitate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descriere = "Information Technology",
                            Nume = "IT"
                        },
                        new
                        {
                            Id = 2,
                            Descriere = "Human Resources",
                            Nume = "HR"
                        });
                });

            modelBuilder.Entity("RedoPawProj.Models.CompanieModel", b =>
                {
                    b.HasOne("RedoPawProj.Models.DomeniuActivitateModel", "DomeniuActivitate")
                        .WithMany("Companii")
                        .HasForeignKey("DomeniuActivitateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DomeniuActivitate");
                });

            modelBuilder.Entity("RedoPawProj.Models.DomeniuActivitateModel", b =>
                {
                    b.Navigation("Companii");
                });
#pragma warning restore 612, 618
        }
    }
}
